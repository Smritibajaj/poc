{"version":3,"sources":["logo.svg","reducers/index.js","containers/Button.js","actions/index.js","containers/NewsItem.js","containers/Loading.js","components/App.js","sagas/index.js","index.js"],"names":["module","exports","__webpack_require__","p","reducer","state","arguments","length","undefined","action","n","Math","floor","random","console","log","type","Object","objectSpread","loading","news","json","Button","_ref","getNews","react_default","a","createElement","onClick","mapDispatchToProps","connect","imgStyle","hight","width","border","borderRadius","articleStyle","margin","color","NewsItem","article","style","title","src","urlToImage","alt","description","href","url","target","Loading","textAlign","img","App","containers_Button","containers_Loading","containers_NewsItem","fetchNews","actionWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","fetch","then","response","sent","put","articles","stop","_marked","_context2","takeLeading","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.53346879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//initialize state with null\r\nconst reducer = (state = {}, action) => {\r\n     let n = Math.floor(Math.random() * 10)\r\n     console.log(\"n is\", n);\r\n     //we will get action\r\n    switch (action.type) {\r\n      case 'GET_NEWS':\r\n           return { ...state, loading: true };\r\n      case 'NEWS_RECEIVED':\r\n           return { ...state, news: action.json[n], loading: false }\r\n      default: \r\n           return state;\r\n    }\r\n   };\r\n   export default reducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getNews } from '../actions';\r\n//action is called on button click\r\nlet Button=({getNews})=>(\r\n   <button onClick={getNews}>Press to see news</button>\r\n)\r\n//action is dispatched to props\r\nconst mapDispatchToProps = {\r\n     getNews: getNews,\r\n};\r\nButton = connect(null,mapDispatchToProps)(Button);\r\nexport default Button;\r\n","export const getNews = () => ({\r\n    type: 'GET_NEWS',\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nconst imgStyle = {\r\n  hight: 'auto',\r\n  width: '80%',\r\n  border: '4px solid RebeccaPurple ',\r\n  borderRadius: '5%'\r\n};\r\nconst articleStyle = {\r\nwidth: '50%',\r\nmargin: '0 auto',\r\ncolor: 'olive'\r\n}\r\nlet NewsItem = ({ article }) => (\r\n  // if article is there then only this will be loaded\r\narticle ?\r\n<article style={articleStyle} >\r\n  <div>\r\n    <h1>{article.title}</h1>\r\n    <img style={imgStyle} src={article.urlToImage} alt=\"\" />\r\n    <h4>{article.description}</h4>\r\n    <a href={article.url} target=\"_blank\">READ MORE</a>\r\n  </div>\r\n</article> :\r\nnull\r\n);\r\n//we will get state and that is dispatched to props\r\nconst mapStateToProps = (state) => ({\r\narticle: state.news,\r\n})\r\nNewsItem = connect(mapStateToProps,null)(NewsItem)\r\nexport default NewsItem;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport img from '../logo.svg'\r\nlet Loading = ({ loading }) => (\r\n   //if props get loading then it will be loaded else null state will be there\r\nloading ?\r\n<div style={{ textAlign: 'center' }}>\r\n   <img src={img} alt='loading' />\r\n   <h1>LOADING</h1>\r\n</div> :\r\nnull\r\n);\r\n//we will get state and that will be dispatched to props\r\nconst mapStateToProps = (state) => ({loading: state.loading})\r\nLoading = connect(mapStateToProps,null)(Loading)\r\nexport default Loading;","import React from 'react';\nimport Button from '../containers/Button';\nimport NewsItem from '../containers/NewsItem'\nimport Loading from '../containers/Loading'\nlet App = () => (\n  <div>\n     <Button />\n     <Loading />\n     <NewsItem />\n  </div>\n);\nexport default App;\n","import { put, takeLatest, all, putResolve , take , takeLeading } from 'redux-saga/effects';\r\nfunction* fetchNews() {\r\n  const json = yield fetch('https://newsapi.org/v1/articles?source=cnn&apiKey=1feac3db0bff457da2949632cd0ee108')\r\n        .then(response => response.json(), );    \r\n  yield put({ type: \"NEWS_RECEIVED\", json: json.articles, });\r\n}\r\nfunction* actionWatcher() {\r\n     yield takeLeading('GET_NEWS', fetchNews)\r\n}\r\nexport default function* rootSaga() {\r\n   yield all([\r\n   actionWatcher(),\r\n   ]);\r\n}","import React from 'react';\nimport createSagaMiddleware from 'redux-saga';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './reducers';\nimport App from './components/App';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n   reducer,\n   applyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\nrender(\n   <Provider store={store}>\n     <App />\n   </Provider>,\ndocument.getElementById('root'),\n);"],"sourceRoot":""}